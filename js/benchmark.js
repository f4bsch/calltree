class ResponseTimeBenchmark{constructor(t){t||(t=window.location.origin),"object"==typeof t&&t.length||(t=[t]),this.urls=t,this.urlsIdxMap=Array.from(t.keys());const s=this;this.xhr=new XMLHttpRequest,this.xhr.withCredentials=!0,this.xhr.addEventListener("progress",function(){s.gotFirstByte||(s.gotFirstByte=!0,s.timeFirstByte=Date.now()-s.tsSend)}),this.xhr.addEventListener("error",function(t){s.logEvent(t)}),this.xhr.addEventListener("load",function(){const t=Date.now()-s.tsSend;s.addTiming(t)}),this.xhr.addEventListener("timeout",function(t){s.logEvent(t)}),this.xhr.addEventListener("loadend",function(){window.setTimeout(s.doRequest.bind(s),s.requestPause)}),this.xhrNoise=new XMLHttpRequest,this.xhrNoise.withCredentials=!0,this.xhrNoise.addEventListener("loadend",function(){s.didNoiseRequest=!0,s.doRequest()}),this.reset()}reset(){this.canceled=!1,this.curIterationProgress=-1,this.curUrlIdx=-1,this.timingIdx=-1,this.maxIterations=1,this.ttfbs=new Array(this.urls.length),this.ttlbs=new Array(this.urls.length),this.lastProgress=new Array(this.urls.length),this.doneOk=function(){},this.isRunning=!1,this.headRequests=0,this.lastUrlString="",this.didNoiseRequest=!1}setProgressCallback(t){this.progressCallback=t}setContentNeedle(t){this.contentNeedle=t}setNoiseUrls(t){this.noiseUrls=t}addCapture(t,s,e){this.captures||(this.captures={}),this.captures[t]={regex:s,scale:e||1,data:null}}addFixture(t,s){this.fixtures||(this.fixtures={}),this.fixtures[t]=s}addConstant(t,s){this.constants||(this.constants={}),this.constants[t]={r:s,v:void 0}}cancel(){this.canceled=!0}prepUrl(t){return t=t.replace(/[&?]+$/g,""),t+=-1!==t.indexOf("?")?"&":"?",t+="r="+Math.random()}doRequest(){if(this.noiseUrls&&this.noiseUrls.length&&!this.didNoiseRequest){let t=this.prepUrl(this.noiseUrls[Math.floor(Math.random()*this.noiseUrls.length)]);return this.xhrNoise.open("GET",t),void this.xhrNoise.send(null)}if(this.didNoiseRequest=!1,this.curIterationProgress=(this.curIterationProgress+1)%this.urls.length,0===this.curIterationProgress){if(this.maxIterations>0&&this.timingIdx>=this.maxIterations||this.maxTime>0&&Date.now()>this.maxTime||this.canceled){if(console.log("benchmark stopped"),this.isRunning=!1,!this.lastProgress[0])return void(this.doneFailed&&this.doneFailed(new Error("no good captures")));for(let t=0;t<this.urls.length;t++)this.lastProgress[t].url=this.urls[t];return this.captures&&(this.lastProgress.captureNames=Object.keys(this.captures)),void(this.doneOk&&this.doneOk(this.lastProgress))}this.timingIdx++,ResponseTimeBenchmark.shuffle(this.urlsIdxMap)}this.curUrlIdx=this.urlsIdxMap[this.curIterationProgress];let t=this.urls[this.curUrlIdx];this.lastUrlString="function"==typeof t?t():t;let s=this.lastUrlString.replace(/[&?]+$/g,"");s+=-1!==s.indexOf("?")?"&":"?",this.xhr.open(this.headRequests?"HEAD":"GET",s+"r="+Math.random()),this.tsSend=Date.now(),this.gotFirstByte=!1,this.xhr.send(null)}run(t,s,e){if(this.isRunning)throw"benchmark is running";this.reset(),this.maxSamples=10240,this.requestPause=e>0?e:40,this.progressCallback||console.warn("running benchmark without progress handler!");for(let t=0;t<this.urls.length;t++)this.ttfbs[t]=new Uint16Array(this.maxSamples),this.ttlbs[t]=new Uint16Array(this.maxSamples);if(this.captures)for(let t in this.captures){this.captures[t].data=new Array(this.urls.length);for(let s=0;s<this.urls.length;s++)this.captures[t].data[s]=new Float32Array(this.maxSamples)}this.isRunning=!0,this.maxIterations=t||30,this.timeStarted=Date.now(),this.maxTime=s&&this.timeStarted+s||0,this.doRequest();const i=this;return new Promise(function(t,s){i.doneOk=t,i.doneFailed=s})}logEvent(t){const s=Date.now()-this.tsSend;console.log(t.type+" after "+s+" ms")}static mean(t,s,e){s<0&&(s=0);let i=0;for(let r=s;r<e;r++)i+=t[r];return i/(e-s)}static getMidVal(t){if(0===t.length)return 0;let s=Math.floor(t.length/2);return t.length%2?t[s]:(t[s-1]+t[s])/2}static shuffle(t,s){for(let e=t.length;e;e--){let i=Math.floor(Math.random()*e);[t[e-1],t[i]]=[t[i],t[e-1]],s&&([s[e-1],s[i]]=[s[i],s[e-1]])}}getStats(t,s){const e=ResponseTimeBenchmark.mean(t,s-20,s),i=ResponseTimeBenchmark.mean(t,0,s);let r=function(t,s){return t-s},n=t.slice(0,s);n.sort(r);let h=15,o=t.slice(Math.max(0,s-h),s);o.sort(r),h=3;let a=t.slice(Math.max(0,s-h),s);a.sort(r);return{cur:t[s-1],med:ResponseTimeBenchmark.getMidVal(n),med3:ResponseTimeBenchmark.getMidVal(a),med15:ResponseTimeBenchmark.getMidVal(o),min:n[Math.min(n.length-1,0)],max:n[Math.max(n.length-1-0,0)],n:s,avg:i,avg20:e,std:this.standardDeviation(n),data:t.slice(0,s)}}standardDeviation(t){const s=ResponseTimeBenchmark.average(t),e=t.map(function(t){const e=t-s;return e*e}),i=ResponseTimeBenchmark.average(e);return Math.sqrt(i)}static average(t){return t.reduce(function(t,s){return t+s},0)/t.length}addTiming(t){if(200!==this.xhr.status)return void console.warn("status code != 200, ignoring this request");let s=this.xhr.responseText,e=Math.max(0,this.xhr.responseText.length-2e3);if(this.contentNeedle&&-1===(e=s.indexOf(this.contentNeedle)))return console.warn("content needle",this.contentNeedle," not found, ignoring this request"),void console.warn("response end (4k) was:",s.substr(Math.max(0,s.length-4e3)));s=s.substring(e);const i=this.timingIdx,r=this.curUrlIdx;this.ttfbs[r][i]=this.timeFirstByte,this.ttlbs[r][i]=t;const n={ttfb:this.getStats(this.ttfbs[r],i+1),ttlb:this.getStats(this.ttlbs[r],i+1)};if(this.captures)for(let t in this.captures){if(!this.captures.hasOwnProperty(t))continue;const e=this.captures[t],h=s.match(e.regex);if(!h||h.length<2)return void console.warn("capture '"+t+"' did not match response ignoring this request",e.regex);e.data[r][i]=parseFloat(h[1])*e.scale,n[t]=this.getStats(e.data[r],i+1)}if(this.fixtures)for(let t in this.fixtures){const e=s.match(this.fixtures[t][r]);if(!e||e.length<1)return void console.warn("fixture '"+t+"' did not match response ignoring this request")}if(this.constants)for(let t in this.constants){let e=this.constants[t],i=s.match(e.r);if(!i||i.length<2)return void console.warn("constant '"+t+"' did not match response ignoring this request");if(void 0===e.v)e.v=i[1],console.info("constant '"+t+"' set to '"+e.v+"' from ",this.lastUrlString);else if(e.v!==i[1])return void console.warn("constant '"+t+"' varied, expected '"+e.v+"', got '"+i[1]+"'!",this.lastUrlString)}this.urls.length>0&&(n.urlIndex=r,n.url=this.lastUrlString,n.iterationProgress=this.curIterationProgress,n.isLastUrl=n.iterationProgress===this.urls.length-1),n.resp=s,this.lastProgress[r]=n;try{this.progressCallback?this.progressCallback(n):console.log(n)}catch(t){throw console.warn("exception in progress callback. stopping benchmark",t),this.cancel(),t}}}ResponseTimeBenchmark.REG_EXP={jsonNumber:function(t){return new RegExp('"'+t.replace(/\//g,"\\\\/")+'"\\s*:\\s*(-?[0-9.]+)\\s*[,}]')}};